technology java {
	// See Listing 4 on p. 18 of the technical report
	types {
		primitive type Boolean based on boolean default;
		primitive type Byte based on byte default;
		primitive type Character based on char default;
		primitive type Date based on date default;
		primitive type Double based on double default;
		primitive type Float based on float default;
		primitive type Integer based on int default;
		primitive type Long based on long default;
		primitive type Short based on short default;
		primitive type String based on string default;
		primitive type BigDecimal;
		primitive type Currency;

		structure type AuthenticationException;
		structure type HttpServletRequest;
		structure type Object;

		list type GrantedAuthorities;

		compatibility matrix {
			Float -> BigDecimal;
			String -> Currency;
		}
	}

	// See Listing 5 on p. 19 of the technical report
	protocols {
		sync rest data formats json default with format json;
	}

	// See Listing 6 on p. 19 of the technical report
	service aspects {
		aspect Embeddable for types;
		aspect ResourceSupport for types;
		aspect Table for types {
			string name;
		}
		aspect UserDetails for types, domainParameters;

		aspect Array for fields;
		aspect AttributeOverrideColumn for fields {
			string name <mandatory>;
			string column <mandatory>;
		}
		aspect Collection for fields;
		aspect Constant for fields;
		aspect DecimalMax for fields {
			string value <mandatory>;
			boolean inclusive = false;
		}
		aspect DecimalMin for fields {
			string value <mandatory>;
		}
		aspect Embedded for fields;
		aspect EmbeddedId for fields;
		aspect Email for fields;
		aspect GeneratedValue for fields;
		aspect JsonFormat for fields {
			string pattern <mandatory>;
		}
		aspect JsonIgnore for fields;
		aspect JsonProperty for fields {
			string name;
		}
		aspect JsonUnwrapped for fields;
		aspect NotNull for fields;
		aspect OneToOne for fields {
			string cascade = "ALL";
		}
		aspect OneToMany for fields {
			string cascade = "ALL";
			string fetch;
		}
		aspect Value for fields {
			string value <mandatory>;
		}
		aspect Valid for fields;

		aspect Multimap for domainOperations;
		aspect Optional for domainParameters, parameters;
		aspect static for domainOperations;
		aspect ResponseEntity for domainParameters, parameters {
			selector(exchange_pattern = out);
		}

		aspect ApplicationName for microservices {
			string value <mandatory>;
		}
		aspect CustomProperty for microservices {
			string name <mandatory>;
			string value <mandatory>;
		}
		aspect JacksonConfiguration for microservices {
			boolean INDENT_OUTPUT;
			string defaultPropertyInclusion;
		}
		aspect DatasourceConfiguration for microservices {
			string url;
			string username;
			string password;
			string driverClassName;
		}
		aspect HibernateConfiguration for microservices {
			string ddlAuto;
		}
		aspect JpaShowSql for microservices {
			boolean showSql = true;
		}

		aspect GetMapping for operations {
			string value;
		}
		aspect MessageMapping for operations {
			string value <mandatory>;
		}
		aspect PostMapping for operations {
			string value;
		}
		aspect PutMapping for operations {
			string value;
		}
		aspect SendTo for operations {
			string value <mandatory>;
		}

		aspect PathVariable for parameters {
			selector(exchange_pattern = in);
		}
		aspect ResponseStatus for parameters {
			selector(exchange_pattern = out);

			string status <mandatory>;
		}
		aspect RequestBody for parameters {
			selector(exchange_pattern = in);
		}
		aspect RequestParam for parameters {
			selector(exchange_pattern = in);

			string value;
			boolean required = false;
			string defaultValue = "";
		}
		aspect Set for parameters;
		aspect Valid for parameters;
	}
}